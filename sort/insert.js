/**
 * 插入排序
 */

const insertSort = (arr) => {
    //i=1是假定第一项位置已确定,等下会比较它,不会漏掉
    for (let i = 1; i < arr.length; i++) {
        // 声明一个辅助变量表示待比较的下标,最开始是第二个数,用来和前一个数比较    
        let j = i;
        // 声明一个变量保存这个待插入的值,它不会变化,因为它直接指向了一个值
        let temp = arr[j];
        // 当待比较的值小于前一个数,把前一个数放在待比较的值的下标处(往后挪了一个)
        while (j > 0 && temp < arr[j - 1]) {
            arr[j] = arr[j - 1];
            j--;
        }
        // 注意这里,如果while里没执行,那就是前面的数都比temp小,
        // 我们想插入的是这一轮下标为i的位置(i一开始是1,那就是想插入arr[1]也就是第二项的位置),而j=i
        // 就算最后j减到0了,那就是插到数组最前面了 没什么问题,前面的都已经往后挪一位了
        arr[j] = temp;
    }
    return arr;
}

console.time(1)
console.log(insertSort([4, 2, 6, 8, 5, 7, 213, 312, 3, 4235, 52352352, 2355, 234, 235, 235, 12, 12, 5, 523, 22345, 25, 235, 235, 325, 235, 2562, 235, 235, 235]))
console.timeEnd(1)

凌美